{"ast":null,"code":"var _jsxFileName = \"/home/yonjanregmi/Thermal_cam/tdm/frontend/src/components/User1TemperaturAuslesen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SocketContext } from \"./SocketContext\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function User1Features() {\n  _s();\n  const socket = useContext(SocketContext); // Holt sich den Socket aus dem Context.\n  const intervalRef = useRef(null); // Speichert die ID des laufenden Intervalls (damit es später gestoppt werden kann)\n\n  const [temperaturen, setTemperaturen] = useState([]);\n  const [histogrammWerte, setHistogrammWerte] = useState([]);\n  const [histogrammError, setHistogrammError] = useState(\"\");\n  const [schwelle, setSchwelle] = useState(null);\n\n  // Wird einmal beim Mounten der Komponente ausgeführt (und wenn sich socket ändert).\n  useEffect(() => {\n    let ackReceived = false; // Lokale Variable, merkt sich, ob das ACK schon empfangen wurde.\n\n    // Funktion, die das Event sendet – aber nur solange kein ACK empfangen wurde.\n    function sendReq() {\n      if (!ackReceived) {\n        socket.emit(\"REQ_CALL_LIVE_TEMPRETURE\");\n      }\n    }\n\n    // Ruft sendReq jede Sekunde auf und speichert die Intervall-ID in intervalRef.current.\n    intervalRef.current = setInterval(sendReq, 1000); // alle 1 Sekunde\n\n    // Wird aufgerufen, wenn das ACK vom Backend kommt\n    function handleAck(msg) {\n      ackReceived = true; // Setzt ackReceived auf true, damit keine weiteren Requests mehr gesendet werde\n      clearInterval(intervalRef.current); // Beendet das Intervall mit clearInterval().\n      intervalRef.current = null; // Setzt die Referenz zurück.\n      // Optional: Hier kannst du eine State-Variable setzen, um anzuzeigen, dass Live-Daten empfangen werden\n      // z.B. setLiveMode(true);\n    }\n    socket.on(\"ACK_CALL_LIVE_TEMPRETURE\", handleAck);\n\n    // Stoppt das Intervall, falls es noch läuft, wenn die Komponente aus dem DOM entfernt wird.\n    // Entfernt den Event-Listener für das ACK, damit es keine Speicherlecks gibt.\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      socket.off(\"ACK_CALL_LIVE_TEMPRETURE\", handleAck);\n    };\n  }, [socket]);\n  useEffect(() => {\n    function handleTemp(msg) {\n      setTemperaturen(alte => [msg, ...alte].slice(0, 1000));\n    }\n    socket.on(\"temperatur\", handleTemp);\n    return () => {\n      socket.off(\"temperatur\", handleTemp);\n    };\n  }, [socket]);\n  useEffect(() => {\n    function handleSchwelle(wert) {\n      setSchwelle(Number(wert));\n    }\n    socket.on(\"schwelle\", handleSchwelle);\n    socket.emit(\"getSchwelle\");\n    return () => {\n      socket.off(\"schwelle\", handleSchwelle);\n    };\n  }, [socket]);\n  function ladeHistogramm() {\n    setHistogrammError(\"\");\n    setHistogrammWerte([]);\n    socket.emit(\"getTemperaturHistogramm\");\n  }\n  useEffect(() => {\n    const histHandler = werte => {\n      setHistogrammWerte(werte);\n    };\n    const errorHandler = msg => {\n      setHistogrammError(msg);\n    };\n    socket.on(\"temperaturHistogramm\", histHandler);\n    socket.on(\"temperaturHistogrammError\", errorHandler);\n    return () => {\n      socket.off(\"temperaturHistogramm\", histHandler);\n      socket.off(\"temperaturHistogrammError\", errorHandler);\n    };\n  }, [socket]);\n  const temperaturenReversed = temperaturen.slice().reverse();\n  const werte = temperaturenReversed.map(msg => Number(msg.wert));\n  const labels = temperaturenReversed.map(msg => new Date(msg.zeit).toLocaleTimeString());\n  const maxWert = werte.length > 0 ? Math.max(...werte) : null;\n  const lineData = {\n    labels,\n    datasets: [{\n      label: \"Temperatur (°C)\",\n      data: werte,\n      fill: false,\n      borderColor: \"rgb(75,192,192)\",\n      tension: 0.1,\n      pointRadius: 0\n    }, maxWert !== null && {\n      label: `Maximalwert (${maxWert.toFixed(2)} °C)`,\n      data: Array(werte.length).fill(maxWert),\n      fill: false,\n      borderColor: \"red\",\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 0,\n      tension: 0\n    }, schwelle !== null && {\n      label: `Schwelle (${schwelle.toFixed(2)} °C)`,\n      data: Array(werte.length).fill(schwelle),\n      fill: false,\n      borderColor: \"orange\",\n      borderWidth: 2,\n      borderDash: [6, 6],\n      pointRadius: 0,\n      pointHitRadius: 0,\n      tension: 0\n    }].filter(Boolean)\n  };\n  const lineOptions = {\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        ticks: {\n          callback: function (value, index, ticks) {\n            if (index === 0) return this.getLabelForValue(value);\n            if (index === ticks.length - 1) return this.getLabelForValue(value);\n            return \"\";\n          },\n          maxRotation: 0,\n          autoSkip: false\n        }\n      },\n      y: {\n        min: 0,\n        max: 300\n      }\n    }\n  };\n  const binStart = 0;\n  const binStep = 5;\n  let barData = null;\n  if (histogrammWerte.length > 0) {\n    const firstNonZero = histogrammWerte.findIndex(v => v !== 0);\n    const lastNonZero = histogrammWerte.length - 1 - [...histogrammWerte].reverse().findIndex(v => v !== 0);\n    const relevantBins = histogrammWerte.slice(firstNonZero, lastNonZero + 1);\n    const binLabels = Array.from({\n      length: relevantBins.length\n    }, (_, i) => `${binStart + (firstNonZero + i) * binStep}–${binStart + (firstNonZero + i + 1) * binStep}°C`);\n    barData = {\n      labels: binLabels,\n      datasets: [{\n        label: \"Häufigkeit\",\n        data: relevantBins,\n        backgroundColor: \"rgba(255,99,132,0.5)\"\n      }]\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-3\",\n      children: \"User1-Funktionen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row g-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow-sm h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title mb-3\",\n              children: \"Linien-Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 320\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: lineData,\n                options: lineOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow-sm h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title mb-3\",\n              children: \"H\\xE4ufigkeits-Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary mb-3\",\n              onClick: ladeHistogramm,\n              children: \"Chart laden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), histogrammError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger py-2 text-center\",\n              children: histogrammError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), barData && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 320\n              },\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: barData,\n                options: {\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(User1Features, \"GheZEY7r3Bxyk6exxEZp2zJW+QY=\");\n_c = User1Features;\nvar _c;\n$RefreshReg$(_c, \"User1Features\");","map":{"version":3,"names":["React","useContext","useEffect","useState","SocketContext","Line","Bar","jsxDEV","_jsxDEV","User1Features","_s","socket","intervalRef","useRef","temperaturen","setTemperaturen","histogrammWerte","setHistogrammWerte","histogrammError","setHistogrammError","schwelle","setSchwelle","ackReceived","sendReq","emit","current","setInterval","handleAck","msg","clearInterval","on","off","handleTemp","alte","slice","handleSchwelle","wert","Number","ladeHistogramm","histHandler","werte","errorHandler","temperaturenReversed","reverse","map","labels","Date","zeit","toLocaleTimeString","maxWert","length","Math","max","lineData","datasets","label","data","fill","borderColor","tension","pointRadius","toFixed","Array","borderWidth","pointHitRadius","borderDash","filter","Boolean","lineOptions","maintainAspectRatio","scales","x","ticks","callback","value","index","getLabelForValue","maxRotation","autoSkip","y","min","binStart","binStep","barData","firstNonZero","findIndex","v","lastNonZero","relevantBins","binLabels","from","_","i","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","options","onClick","plugins","legend","display","_c","$RefreshReg$"],"sources":["/home/yonjanregmi/Thermal_cam/tdm/frontend/src/components/User1TemperaturAuslesen.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SocketContext } from \"./SocketContext\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\n\r\nexport default function User1Features() {\r\n  const socket = useContext(SocketContext); // Holt sich den Socket aus dem Context.\r\n  const intervalRef = useRef(null); // Speichert die ID des laufenden Intervalls (damit es später gestoppt werden kann)\r\n\r\n  const [temperaturen, setTemperaturen] = useState([]);\r\n  const [histogrammWerte, setHistogrammWerte] = useState([]);\r\n  const [histogrammError, setHistogrammError] = useState(\"\");\r\n  const [schwelle, setSchwelle] = useState(null);\r\n\r\n  // Wird einmal beim Mounten der Komponente ausgeführt (und wenn sich socket ändert).\r\n  useEffect(() => {\r\n    let ackReceived = false; // Lokale Variable, merkt sich, ob das ACK schon empfangen wurde.\r\n\r\n    // Funktion, die das Event sendet – aber nur solange kein ACK empfangen wurde.\r\n    function sendReq() {\r\n      if (!ackReceived) {\r\n        socket.emit(\"REQ_CALL_LIVE_TEMPRETURE\");\r\n      }\r\n    }\r\n\r\n    // Ruft sendReq jede Sekunde auf und speichert die Intervall-ID in intervalRef.current.\r\n    intervalRef.current = setInterval(sendReq, 1000); // alle 1 Sekunde\r\n\r\n    // Wird aufgerufen, wenn das ACK vom Backend kommt\r\n    function handleAck(msg) {\r\n      ackReceived = true; // Setzt ackReceived auf true, damit keine weiteren Requests mehr gesendet werde\r\n      clearInterval(intervalRef.current); // Beendet das Intervall mit clearInterval().\r\n      intervalRef.current = null; // Setzt die Referenz zurück.\r\n      // Optional: Hier kannst du eine State-Variable setzen, um anzuzeigen, dass Live-Daten empfangen werden\r\n      // z.B. setLiveMode(true);\r\n    }\r\n\r\n    socket.on(\"ACK_CALL_LIVE_TEMPRETURE\", handleAck);\r\n\r\n    // Stoppt das Intervall, falls es noch läuft, wenn die Komponente aus dem DOM entfernt wird.\r\n    // Entfernt den Event-Listener für das ACK, damit es keine Speicherlecks gibt.\r\n    return () => {\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n      socket.off(\"ACK_CALL_LIVE_TEMPRETURE\", handleAck);\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    function handleTemp(msg) {\r\n      setTemperaturen((alte) => [msg, ...alte].slice(0, 1000));\r\n    }\r\n    socket.on(\"temperatur\", handleTemp);\r\n    return () => {\r\n      socket.off(\"temperatur\", handleTemp);\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    function handleSchwelle(wert) {\r\n      setSchwelle(Number(wert));\r\n    }\r\n    socket.on(\"schwelle\", handleSchwelle);\r\n    socket.emit(\"getSchwelle\");\r\n    return () => {\r\n      socket.off(\"schwelle\", handleSchwelle);\r\n    };\r\n  }, [socket]);\r\n\r\n  function ladeHistogramm() {\r\n    setHistogrammError(\"\");\r\n    setHistogrammWerte([]);\r\n    socket.emit(\"getTemperaturHistogramm\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const histHandler = (werte) => {\r\n      setHistogrammWerte(werte);\r\n    };\r\n    const errorHandler = (msg) => {\r\n      setHistogrammError(msg);\r\n    };\r\n    socket.on(\"temperaturHistogramm\", histHandler);\r\n    socket.on(\"temperaturHistogrammError\", errorHandler);\r\n    return () => {\r\n      socket.off(\"temperaturHistogramm\", histHandler);\r\n      socket.off(\"temperaturHistogrammError\", errorHandler);\r\n    };\r\n  }, [socket]);\r\n\r\n  const temperaturenReversed = temperaturen.slice().reverse();\r\n  const werte = temperaturenReversed.map((msg) => Number(msg.wert));\r\n  const labels = temperaturenReversed.map((msg) =>\r\n    new Date(msg.zeit).toLocaleTimeString()\r\n  );\r\n  const maxWert = werte.length > 0 ? Math.max(...werte) : null;\r\n\r\n  const lineData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Temperatur (°C)\",\r\n        data: werte,\r\n        fill: false,\r\n        borderColor: \"rgb(75,192,192)\",\r\n        tension: 0.1,\r\n        pointRadius: 0,\r\n      },\r\n      maxWert !== null && {\r\n        label: `Maximalwert (${maxWert.toFixed(2)} °C)`,\r\n        data: Array(werte.length).fill(maxWert),\r\n        fill: false,\r\n        borderColor: \"red\",\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n        pointHitRadius: 0,\r\n        tension: 0,\r\n      },\r\n      schwelle !== null && {\r\n        label: `Schwelle (${schwelle.toFixed(2)} °C)`,\r\n        data: Array(werte.length).fill(schwelle),\r\n        fill: false,\r\n        borderColor: \"orange\",\r\n        borderWidth: 2,\r\n        borderDash: [6, 6],\r\n        pointRadius: 0,\r\n        pointHitRadius: 0,\r\n        tension: 0,\r\n      },\r\n    ].filter(Boolean),\r\n  };\r\n\r\n  const lineOptions = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          callback: function (value, index, ticks) {\r\n            if (index === 0) return this.getLabelForValue(value);\r\n            if (index === ticks.length - 1) return this.getLabelForValue(value);\r\n            return \"\";\r\n          },\r\n          maxRotation: 0,\r\n          autoSkip: false,\r\n        },\r\n      },\r\n      y: {\r\n        min: 0,\r\n        max: 300,\r\n      },\r\n    },\r\n  };\r\n\r\n  const binStart = 0;\r\n  const binStep = 5;\r\n  let barData = null;\r\n  if (histogrammWerte.length > 0) {\r\n    const firstNonZero = histogrammWerte.findIndex((v) => v !== 0);\r\n    const lastNonZero =\r\n      histogrammWerte.length -\r\n      1 -\r\n      [...histogrammWerte].reverse().findIndex((v) => v !== 0);\r\n    const relevantBins = histogrammWerte.slice(firstNonZero, lastNonZero + 1);\r\n    const binLabels = Array.from(\r\n      { length: relevantBins.length },\r\n      (_, i) =>\r\n        `${binStart + (firstNonZero + i) * binStep}–${\r\n          binStart + (firstNonZero + i + 1) * binStep\r\n        }°C`\r\n    );\r\n    barData = {\r\n      labels: binLabels,\r\n      datasets: [\r\n        {\r\n          label: \"Häufigkeit\",\r\n          data: relevantBins,\r\n          backgroundColor: \"rgba(255,99,132,0.5)\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h3 className=\"mb-3\">User1-Funktionen</h3>\r\n      <ul className=\"mb-4\">\r\n        <li>Dashboard</li>\r\n      </ul>\r\n      <hr />\r\n\r\n      <div className=\"row g-4\">\r\n        {/* Linien-Diagramm */}\r\n        <div className=\"col-12 col-lg-6\">\r\n          <div className=\"card shadow-sm h-100\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title mb-3\">Linien-Chart</h4>\r\n              <div style={{ height: 320 }}>\r\n                <Line data={lineData} options={lineOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Histogramm */}\r\n        <div className=\"col-12 col-lg-6\">\r\n          <div className=\"card shadow-sm h-100\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title mb-3\">Häufigkeits-Chart</h4>\r\n              <button\r\n                className=\"btn btn-outline-primary mb-3\"\r\n                onClick={ladeHistogramm}\r\n              >\r\n                Chart laden\r\n              </button>\r\n              {histogrammError && (\r\n                <div className=\"alert alert-danger py-2 text-center\">\r\n                  {histogrammError}\r\n                </div>\r\n              )}\r\n              {barData && (\r\n                <div style={{ height: 320 }}>\r\n                  <Bar\r\n                    data={barData}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                      plugins: { legend: { display: false } },\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}